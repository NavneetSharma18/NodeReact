{"ast":null,"code":"var _jsxFileName = \"/Users/navneetprogrammer/Desktop/NodeReact/frontend/src/components/User/CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm() {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = localStorage.getItem('payment_intent');\n    if (!clientSecret) {\n      return;\n    }\n    const queryString = window.location.search;\n    const queryParams = {};\n    stripe.retrievePaymentIntent(clientSecret).then(({\n      paymentIntent\n    }) => {\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Please enter your payment details\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/checkout\"\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      className: \"submit-button px-4 py-3 rounded-full bg-pink-400 text-white focus:ring focus:outline-none w-full text-xl font-semibold transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutForm, \"I2mD8VtLUdS+pxXYAFWCJ5LM4cQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","PaymentElement","useStripe","useElements","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","clientSecret","localStorage","getItem","queryString","window","location","search","queryParams","retrievePaymentIntent","then","paymentIntent","status","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","type","paymentElementOptions","layout","id","onSubmit","children","options","fileName","_jsxFileName","lineNumber","columnNumber","disabled","className","_c","$RefreshReg$"],"sources":["/Users/navneetprogrammer/Desktop/NodeReact/frontend/src/components/User/CheckoutForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  PaymentElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm() {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n\n    if (!stripe) {\n      return;\n    }\n\n   \n    const clientSecret = localStorage.getItem('payment_intent');\n    if (!clientSecret) {\n      return;\n    }\n\n    const queryString = window.location.search;\n    const queryParams = {};\n    \n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n        switch (paymentIntent.status) {\n            case \"succeeded\":\n                setMessage(\"Payment succeeded!\");\n                break;\n            case \"processing\":\n                setMessage(\"Your payment is processing.\");\n                break;\n            case \"requires_payment_method\":\n                setMessage(\"Please enter your payment details\");\n                break;\n            default:\n                setMessage(\"Something went wrong.\");\n                break;\n        }\n    });\n\n    \n  }, [stripe]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js hasn't yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n\n    const {error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000/checkout\",\n      },\n    });\n    \n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n\n    setIsLoading(false);\n  };\n\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  }\n\n  \n \n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n\n      <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\" className=\"submit-button px-4 py-3 rounded-full bg-pink-400 text-white focus:ring focus:outline-none w-full text-xl font-semibold transition-colors\">\n        <span id=\"button-text\" >\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\n        </span>\n      </button>\n      \n      {/* Show any error or success messages */}\n      {message && <div id=\"payment-message\">{message}</div>}\n    </form>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,cAAc,EACdC,SAAS,EACTC,WAAW,QACN,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAGjDD,SAAS,CAAC,MAAM;IAEd,IAAI,CAACS,MAAM,EAAE;MACX;IACF;IAGA,MAAMM,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC3D,IAAI,CAACF,YAAY,EAAE;MACjB;IACF;IAEA,MAAMG,WAAW,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM;IAC1C,MAAMC,WAAW,GAAG,CAAC,CAAC;IAEtBb,MAAM,CAACc,qBAAqB,CAACR,YAAY,CAAC,CAACS,IAAI,CAAC,CAAC;MAAEC;IAAc,CAAC,KAAK;MACnE,QAAQA,aAAa,CAACC,MAAM;QACxB,KAAK,WAAW;UACZd,UAAU,CAAC,oBAAoB,CAAC;UAChC;QACJ,KAAK,YAAY;UACbA,UAAU,CAAC,6BAA6B,CAAC;UACzC;QACJ,KAAK,yBAAyB;UAC1BA,UAAU,CAAC,mCAAmC,CAAC;UAC/C;QACJ;UACIA,UAAU,CAAC,uBAAuB,CAAC;UACnC;MACR;IACJ,CAAC,CAAC;EAGJ,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACpB,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;MACA;MACA;IACF;IAEAI,YAAY,CAAC,IAAI,CAAC;IAElB,MAAM;MAACgB;IAAM,CAAC,GAAG,MAAMrB,MAAM,CAACsB,cAAc,CAAC;MAC3CrB,QAAQ;MACRsB,aAAa,EAAE;QACb;QACAC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA,IAAIH,KAAK,CAACI,IAAI,KAAK,YAAY,IAAIJ,KAAK,CAACI,IAAI,KAAK,kBAAkB,EAAE;MACpEtB,UAAU,CAACkB,KAAK,CAACnB,OAAO,CAAC;IAC3B,CAAC,MAAM;MACLC,UAAU,CAAC,+BAA+B,CAAC;IAC7C;IAEAE,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMqB,qBAAqB,GAAG;IAC5BC,MAAM,EAAE;EACV,CAAC;EAKD,oBACE9B,OAAA;IAAM+B,EAAE,EAAC,cAAc;IAACC,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBAE7CjC,OAAA,CAACJ,cAAc;MAACmC,EAAE,EAAC,iBAAiB;MAACG,OAAO,EAAEL;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEtC,OAAA;MAAQuC,QAAQ,EAAEhC,SAAS,IAAI,CAACJ,MAAM,IAAI,CAACC,QAAS;MAAC2B,EAAE,EAAC,QAAQ;MAACS,SAAS,EAAC,0IAA0I;MAAAP,QAAA,eACnNjC,OAAA;QAAM+B,EAAE,EAAC,aAAa;QAAAE,QAAA,EACnB1B,SAAS,gBAAGP,OAAA;UAAKwC,SAAS,EAAC,SAAS;UAACT,EAAE,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAG;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGRjC,OAAO,iBAAIL,OAAA;MAAK+B,EAAE,EAAC,iBAAiB;MAAAE,QAAA,EAAE5B;IAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEX;AAACpC,EAAA,CAjGuBD,YAAY;EAAA,QACnBJ,SAAS,EACPC,WAAW;AAAA;AAAA2C,EAAA,GAFNxC,YAAY;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}