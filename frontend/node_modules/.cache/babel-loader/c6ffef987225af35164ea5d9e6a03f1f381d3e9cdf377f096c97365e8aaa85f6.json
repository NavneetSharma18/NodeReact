{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst initialState = {\n  cartItems: [],\n  newItem: null,\n  totalPrice: null,\n  subTotal: null,\n  shippingCost: 4\n};\n\n/*-------------------------------------------------\n| Create Redux Thunk For Api Call ASYNC\n---------------------------------------------------*/\n\nexport const addProductToCart = product => async dispatch => {\n  try {\n    dispatch(addToCart(product));\n  } catch (error) {\n    toast.error('Error during login:' + error, {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  }\n};\n\n/*-------------------------------------------------\n| Create Redux Slice and Reducer Function\n---------------------------------------------------*/\n\nexport const productApiSlice = createSlice({\n  name: 'product_api',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      state.newItem = action.payload;\n      const isItemPresent = state.cartItems.some(item => item._id === state.newItem._id && item.product_price === state.newItem.product_price);\n      if (!isItemPresent) {\n        state.cartItems.push(state.newItem);\n        toast.success(product.product_title + ' is added to your cart successfully!', {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n      state.subTotal = state.cartItems.reduce((acc, item) => acc + item.product_price * 1, 0);\n      state.totalPrice = state.subTotal * 1 + state.shippingCost * 1;\n    }\n  }\n});\nexport const {\n  addToCart\n} = productApiSlice.actions;\nexport default productApiSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ToastContainer","toast","axios","defaults","withCredentials","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","initialState","cartItems","newItem","totalPrice","subTotal","shippingCost","addProductToCart","product","dispatch","addToCart","error","position","POSITION","TOP_RIGHT","productApiSlice","name","reducers","state","action","payload","isItemPresent","some","item","_id","product_price","push","success","product_title","reduce","acc","actions","reducer"],"sources":["/Users/navneetprogrammer/Desktop/NodeReact/frontend/src/redux/productApi/index.js"],"sourcesContent":["import { createSlice,createAsyncThunk } from '@reduxjs/toolkit'\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from 'axios';\naxios.defaults.withCredentials = true\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL\n\nconst initialState = {\n\n  cartItems   : [],\n  newItem     : null,\n  totalPrice  : null,\n  subTotal    : null,\n  shippingCost: 4\n\n}\n\n\n\n/*-------------------------------------------------\n| Create Redux Thunk For Api Call ASYNC\n---------------------------------------------------*/\n\nexport const addProductToCart = (product) => async (dispatch) => {\n\n    try {   \n          \n          dispatch(addToCart(product));\n          \n\n    }catch (error) {\n\n            toast.error('Error during login:'+error, {\n              position: toast.POSITION.TOP_RIGHT,\n            });\n    }\n\n\n}\n\n\n\n/*-------------------------------------------------\n| Create Redux Slice and Reducer Function\n---------------------------------------------------*/\n\n\nexport const productApiSlice = createSlice({\n\n  name: 'product_api',\n  initialState,\n  reducers: {\n\n          addToCart: (state, action) => {\n\n                  state.newItem       = action.payload;\n                  const isItemPresent = state.cartItems.some(item => item._id === state.newItem._id && item.product_price === state.newItem.product_price);\n                  if(!isItemPresent){\n                    state.cartItems.push(state.newItem);\n                    toast.success(product.product_title+' is added to your cart successfully!', {\n                      position: toast.POSITION.TOP_RIGHT,\n                    });\n                  }\n                  state.subTotal   = state.cartItems.reduce((acc, item) => acc + item.product_price*1, 0);\n                  state.totalPrice = state.subTotal*1+state.shippingCost*1\n\n\n                  \n              \n          }\n  }\n})\n\nexport const { addToCart } = productApiSlice.actions;\nexport default productApiSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAACC,gBAAgB,QAAQ,kBAAkB;AAC/D,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,GAAG,IAAI;AAErC,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,YAAY,GAAG;EAEnBC,SAAS,EAAK,EAAE;EAChBC,OAAO,EAAO,IAAI;EAClBC,UAAU,EAAI,IAAI;EAClBC,QAAQ,EAAM,IAAI;EAClBC,YAAY,EAAE;AAEhB,CAAC;;AAID;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EAE7D,IAAI;IAEEA,QAAQ,CAACC,SAAS,CAACF,OAAO,CAAC,CAAC;EAGlC,CAAC,QAAOG,KAAK,EAAE;IAEPlB,KAAK,CAACkB,KAAK,CAAC,qBAAqB,GAACA,KAAK,EAAE;MACvCC,QAAQ,EAAEnB,KAAK,CAACoB,QAAQ,CAACC;IAC3B,CAAC,CAAC;EACV;AAGJ,CAAC;;AAID;AACA;AACA;;AAGA,OAAO,MAAMC,eAAe,GAAGzB,WAAW,CAAC;EAEzC0B,IAAI,EAAE,aAAa;EACnBf,YAAY;EACZgB,QAAQ,EAAE;IAEFP,SAAS,EAAEA,CAACQ,KAAK,EAAEC,MAAM,KAAK;MAEtBD,KAAK,CAACf,OAAO,GAASgB,MAAM,CAACC,OAAO;MACpC,MAAMC,aAAa,GAAGH,KAAK,CAAChB,SAAS,CAACoB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKN,KAAK,CAACf,OAAO,CAACqB,GAAG,IAAID,IAAI,CAACE,aAAa,KAAKP,KAAK,CAACf,OAAO,CAACsB,aAAa,CAAC;MACxI,IAAG,CAACJ,aAAa,EAAC;QAChBH,KAAK,CAAChB,SAAS,CAACwB,IAAI,CAACR,KAAK,CAACf,OAAO,CAAC;QACnCV,KAAK,CAACkC,OAAO,CAACnB,OAAO,CAACoB,aAAa,GAAC,sCAAsC,EAAE;UAC1EhB,QAAQ,EAAEnB,KAAK,CAACoB,QAAQ,CAACC;QAC3B,CAAC,CAAC;MACJ;MACAI,KAAK,CAACb,QAAQ,GAAKa,KAAK,CAAChB,SAAS,CAAC2B,MAAM,CAAC,CAACC,GAAG,EAAEP,IAAI,KAAKO,GAAG,GAAGP,IAAI,CAACE,aAAa,GAAC,CAAC,EAAE,CAAC,CAAC;MACvFP,KAAK,CAACd,UAAU,GAAGc,KAAK,CAACb,QAAQ,GAAC,CAAC,GAACa,KAAK,CAACZ,YAAY,GAAC,CAAC;IAKhE;EACR;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI;AAAU,CAAC,GAAGK,eAAe,CAACgB,OAAO;AACpD,eAAehB,eAAe,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}